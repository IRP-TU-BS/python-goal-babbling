Extending
=========

`python-goal-babbling` is designed in a way that every component is exchangeable by other implementations, as long as
they implement the required interfaces.

Have a look at the following abstract classes if you intend to extend this framework or implement a different kind of
Goal Babbling:

* :py:class:`pygb.interfaces.AbstractState`
* :py:class:`pygb.interfaces.AbstractStoppingCriteria`
* :py:class:`pygb.interfaces.AbstractGoalSelector`
* :py:class:`pygb.interfaces.AbstractNoiseGenerator`
* :py:class:`pygb.interfaces.AbstractSequenceGenerator`
* :py:class:`pygb.interfaces.AbstractWeightGenerator`
* :py:class:`pygb.interfaces.AbstractContext`

You can then use your own implementation as a drop-in replacement for their pendants, either when using the state
machine generated by :py:func:`pygb.vanilla_goal_babbling` or when you build your own, custom state machine manually.